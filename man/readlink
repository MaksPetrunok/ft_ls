
READLINK(2)                 BSD System Calls Manual                READLINK(2)

NNAAMMEE
     rreeaaddlliinnkk, rreeaaddlliinnkkaatt -- read value of a symbolic link

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _s_s_i_z_e___t
     rreeaaddlliinnkk(_c_o_n_s_t _c_h_a_r _*_r_e_s_t_r_i_c_t _p_a_t_h, _c_h_a_r _*_r_e_s_t_r_i_c_t _b_u_f, _s_i_z_e___t _b_u_f_s_i_z_e);

     _s_s_i_z_e___t
     rreeaaddlliinnkkaatt(_i_n_t _f_d, _c_o_n_s_t _c_h_a_r _*_r_e_s_t_r_i_c_t _p_a_t_h, _c_h_a_r _*_r_e_s_t_r_i_c_t _b_u_f,
         _s_i_z_e___t _b_u_f_s_i_z_e);

DDEESSCCRRIIPPTTIIOONN
     rreeaaddlliinnkk() places the contents of the symbolic link _p_a_t_h in the buffer
     _b_u_f, which has size _b_u_f_s_i_z_e.  RReeaaddlliinnkk does not append a NUL character to
     _b_u_f.

     The rreeaaddlliinnkkaatt() system call is equivalent to rreeaaddlliinnkk() except in the
     case where _p_a_t_h specifies a relative path.  In this case the symbolic
     link whose content is read relative to the directory associated with the
     file descriptor _f_d instead of the current working directory.  If
     rreeaaddlliinnkkaatt() is passed the special value AT_FDCWD in the _f_d parameter,
     the current working directory is used and the behavior is identical to a
     call to rreeaaddlliinnkk().

RREETTUURRNN VVAALLUUEESS
     The call returns the count of characters placed in the buffer if it suc-
     ceeds, or a -1 if an error occurs, placing the error code in the global
     variable _e_r_r_n_o.

EERRRROORRSS
     rreeaaddlliinnkk() will fail if:

     [EACCES]           Search permission is denied for a component of the
                        path prefix.

     [EFAULT]           _B_u_f extends outside the process's allocated address
                        space.

     [EINVAL]           The named file is not a symbolic link.

     [EIO]              An I/O error occurred while reading from the file sys-
                        tem.

     [ELOOP]            Too many symbolic links are encountered in translating
                        the pathname.  This is taken to be indicative of a
                        looping symbolic link.

     [ENAMETOOLONG]     A component of a pathname exceeded {NAME_MAX} charac-
                        ters, or an entire path name (possibly expanded by a
                        symbolic link) exceeded {PATH_MAX} characters.

     [ENOENT]           The named file does not exist.

     [ENOTDIR]          A component of the path prefix is not a directory.

     In addition to the errors returned by the rreeaaddlliinnkk(), the rreeaaddlliinnkkaatt()
     may fail if:

     [EBADF]            The _p_a_t_h argument does not specify an absolute path
                        and the _f_d argument is neither AT_FDCWD nor a valid
                        file descriptor open for searching.

     [ENOTDIR]          The _p_a_t_h argument is not an absolute path and _f_d is
                        neither AT_FDCWD nor a file descriptor associated with
                        a directory.

LLEEGGAACCYY SSYYNNOOPPSSIISS
     ##iinncclluuddee <<uunniissttdd..hh>>

     _i_n_t
     rreeaaddlliinnkk(_c_o_n_s_t _c_h_a_r _*_p_a_t_h, _c_h_a_r _*_b_u_f, _i_n_t _b_u_f_s_i_z_e);

     The function type and the type of _b_u_f_s_i_z_e have changed.

SSEEEE AALLSSOO
     lstat(2), stat(2), symlink(2), compat(5), symlink(7)

SSTTAANNDDAARRDDSS
     The rreeaaddlliinnkkaatt() system call is expected to conform to POSIX.1-2008 .

HHIISSTTOORRYY
     The rreeaaddlliinnkk() function call appeared in 4.2BSD.  The rreeaaddlliinnkkaatt() system
     call appeared in OS X 10.10

4.2 Berkeley Distribution        June 4, 1993        4.2 Berkeley Distribution
